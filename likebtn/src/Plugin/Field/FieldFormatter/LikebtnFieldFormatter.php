<?php

/**
 * @file
 * Contains \Drupal\likebtn\Plugin\Field\FieldFormatter\LikeBtnFieldFormatter.
 */

namespace Drupal\likebtn\Plugin\Field\FieldFormatter;

use Drupal\Core\Entity\Entity;
use Drupal\Core\Field\FormatterBase;
use Drupal\Core\Field\FieldItemListInterface;
use Drupal\Core\Field\FormStateInterface;
use Drupal\likebtn\Controller\LikeBtnController;
use Drupal\likebtn\LikebtnInterface;
use Drupal\likebtn\LikeBtnMarkup;

/**
 * Plugin implementation of the 'example_formatter' formatter
 *
 * @FieldFormatter(
 *   id = "default",
 *   label = @Translation("LikeBtn (default)"),
 *   field_types = {
 *     "likebtn_field"
 *   },
 * )
 */
class LikeBtnFieldFormatter extends FormatterBase {

  /**
   * {@inheritdoc}
   */
  public function viewElements(FieldItemListInterface $items, $langcode) {
    //$id = $items->getFieldDefinition()->id();
    //$entity_info = Entity::load($id);
    $markup_render = new LikeBtnMarkup();

    $elements = array();
    foreach ($items as $delta => $item) {
      $elements[$delta] = $markup_render->likebtn_get_markup('node', 'articles' . '_field_' . 12 . '_index_' . $delta, _likebtn_flatten_field_instance_settings(unserialize(LikebtnInterface::LIKEBTN_SETTINGS)));
    }

    return $elements;
  }

  public static function defaultSettings() {
    return parent::defaultSettings(); // TODO: Change the autogenerated stub
  }

  public function prepareView(array $entities_items) {
    $controller = new LikeBtnController();
    $items = array();

    foreach ($entities_items as $id => $entity) {
      if (empty($items[$id])) {
        $items[$id][0] = $controller->likebtn_field_load($field, NULL, $instances[$id]);
      }
    }

    parent::prepareView($items);
  }
}
